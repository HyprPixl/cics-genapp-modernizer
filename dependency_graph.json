{
  "nodes": {
    "#SSVARS": {
      "depends_on": [],
      "description": null,
      "type": null
    },
    "CCOLOR": {
      "depends_on": [],
      "description": "Car color lookup table - MSGUTBL for vehicle color choices in simulation (Blue, Purple, Beige, Grey, Orange, etc.)",
      "type": "reference_data"
    },
    "CMAKE": {
      "depends_on": [],
      "description": "Car make lookup table - MSGUTBL for vehicle manufacturers in simulation (Ford, Mazda, Honda, Cadillac, Ferrari, etc.)",
      "type": "reference_data"
    },
    "CMODEL": {
      "depends_on": [],
      "description": "Car model lookup table - MSGUTBL for vehicle models in simulation (205, Twinkle, 911, Riva, Omega, Fiesta, etc.)",
      "type": "reference_data"
    },
    "CTYPE": {
      "depends_on": [],
      "description": "Coverage type lookup table - MSGUTBL for insurance coverage types (Theft, Fire, Accident, Water Damage, Subsidence, etc.)",
      "type": "reference_data"
    },
    "DB2.COMMERCIAL": {
      "depends_on": [],
      "description": "Commercial policy extension",
      "type": "db2-table"
    },
    "DB2.CUSTOMER": {
      "depends_on": [],
      "description": "Customer master table",
      "type": "db2-table"
    },
    "DB2.CUSTOMER_SECURE": {
      "depends_on": [],
      "description": "Customer security credentials table",
      "type": "db2-table"
    },
    "DB2.ENDOWMENT": {
      "depends_on": [],
      "description": "Endowment policy details",
      "type": "db2-table"
    },
    "DB2.HOUSE": {
      "depends_on": [],
      "description": "House policy extension",
      "type": "db2-table"
    },
    "DB2.MOTOR": {
      "depends_on": [],
      "description": "Motor policy extension",
      "type": "db2-table"
    },
    "DB2.POLICY": {
      "depends_on": [],
      "description": "Core policy header table",
      "type": "db2-table"
    },
    "FNAME": {
      "depends_on": [],
      "description": "First names lookup table - MSGUTBL for customer first names in simulation (Adrian, John, Robert, Michael, William, etc.)",
      "type": "reference_data"
    },
    "HTYPE": {
      "depends_on": [],
      "description": "House type lookup table - MSGUTBL for residential property types (Detached, Semi, Bungalow, Flat, Apartment, Farm, etc.)",
      "type": "reference_data"
    },
    "KSDSCUST": {
      "depends_on": [],
      "description": "VSAM cluster for customer summaries",
      "type": "vsam-file"
    },
    "KSDSPOLY": {
      "depends_on": [],
      "description": "VSAM cluster for policy summaries",
      "type": "vsam-file"
    },
    "LGACDB01": {
      "depends_on": [
        "LGACDB02",
        "LGACVS01",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Add customer DB2 backend service",
      "type": "cobol"
    },
    "LGACDB02": {
      "depends_on": [
        "DB2.CUSTOMER_SECURE",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ"
      ],
      "description": "Customer security service",
      "type": "cobol"
    },
    "LGACUS01": {
      "depends_on": [
        "LGACDB01",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Add customer front-end program",
      "type": "cobol"
    },
    "LGACVS01": {
      "depends_on": [
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Customer VSAM writer service",
      "type": "cobol"
    },
    "LGAPDB01": {
      "depends_on": [
        "DB2.COMMERCIAL",
        "DB2.ENDOWMENT",
        "DB2.HOUSE",
        "DB2.MOTOR",
        "DB2.POLICY",
        "LGAPVS01",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ"
      ],
      "description": "DB2-backed policy add service",
      "type": "cobol"
    },
    "LGAPOL01": {
      "depends_on": [
        "LGAPDB01",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Add policy front-end program",
      "type": "cobol"
    },
    "LGAPVS01": {
      "depends_on": [
        "KSDSPOLY",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "VSAM writer for policy records",
      "type": "cobol"
    },
    "LGCMAREA": {
      "depends_on": [],
      "description": "Shared commarea layout",
      "type": "copybook"
    },
    "LGDPDB01": {
      "depends_on": [
        "DB2.POLICY",
        "LGCMAREA",
        "LGDPVS01",
        "LGSTSQ"
      ],
      "description": "Delete policy database service",
      "type": "cobol"
    },
    "LGDPOL01": {
      "depends_on": [
        "LGCMAREA",
        "LGDPDB01",
        "LGSTSQ"
      ],
      "description": "Delete policy front-end program",
      "type": "cobol"
    },
    "LGDPVS01": {
      "depends_on": [
        "KSDSPOLY",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Delete policy VSAM service",
      "type": "cobol"
    },
    "LGICDB01": {
      "depends_on": [
        "DB2.CUSTOMER",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ"
      ],
      "description": "Inquire customer database service",
      "type": "cobol"
    },
    "LGICUS01": {
      "depends_on": [
        "LGCMAREA",
        "LGICDB01",
        "LGSTSQ"
      ],
      "description": "Inquire customer front-end program",
      "type": "cobol"
    },
    "LGICVS01": {
      "depends_on": [],
      "description": null,
      "type": null
    },
    "LGIPDB01": {
      "depends_on": [
        "DB2.COMMERCIAL",
        "DB2.ENDOWMENT",
        "DB2.HOUSE",
        "DB2.MOTOR",
        "DB2.POLICY",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ"
      ],
      "description": "Inquire policy database service",
      "type": "cobol"
    },
    "LGIPOL01": {
      "depends_on": [
        "LGCMAREA",
        "LGIPDB01",
        "LGSTSQ"
      ],
      "description": "Inquire policy front-end program",
      "type": "cobol"
    },
    "LGPOLICY": {
      "depends_on": [],
      "description": "Embedded SQL host variable definitions",
      "type": "sql-include"
    },
    "LGSTSQ": {
      "depends_on": [],
      "description": "TDQ logger for diagnostics",
      "type": "cobol"
    },
    "LGUCDB01": {
      "depends_on": [
        "DB2.CUSTOMER",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ",
        "LGUCVS01"
      ],
      "description": "Update customer database service",
      "type": "cobol"
    },
    "LGUCUS01": {
      "depends_on": [
        "LGCMAREA",
        "LGSTSQ",
        "LGUCDB01"
      ],
      "description": "Update customer front-end program",
      "type": "cobol"
    },
    "LGUCVS01": {
      "depends_on": [
        "KSDSCUST",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Update customer VSAM service",
      "type": "cobol"
    },
    "LGUPDB01": {
      "depends_on": [
        "DB2.ENDOWMENT",
        "DB2.HOUSE",
        "DB2.MOTOR",
        "DB2.POLICY",
        "LGCMAREA",
        "LGPOLICY",
        "LGSTSQ",
        "LGUPVS01"
      ],
      "description": "Update policy database service",
      "type": "cobol"
    },
    "LGUPOL01": {
      "depends_on": [
        "LGCMAREA",
        "LGSTSQ",
        "LGUPDB01"
      ],
      "description": "Update policy front-end program",
      "type": "cobol"
    },
    "LGUPVS01": {
      "depends_on": [
        "KSDSPOLY",
        "LGCMAREA",
        "LGSTSQ"
      ],
      "description": "Update policy VSAM service",
      "type": "cobol"
    },
    "PCODE": {
      "depends_on": [],
      "description": "Postal code lookup table - MSGUTBL for UK postal codes in simulation (AB239AB, AB239AF, AB259AB, AB309AA, etc.)",
      "type": "reference_data"
    },
    "PTYPE": {
      "depends_on": [],
      "description": "Property type lookup table - MSGUTBL for commercial property types (Office, Shop, Retail, Warehouse, Wholesale, etc.)",
      "type": "reference_data"
    },
    "RTYPE": {
      "depends_on": [],
      "description": "Road type lookup table - MSGUTBL for address street types (Road, RD, Street, ST, Avenue, AVE, Close, CL)",
      "type": "reference_data"
    },
    "SNAME": {
      "depends_on": [],
      "description": "Surname lookup table - MSGUTBL for customer surnames in simulation (Smith, Jones, Taylor, Williams, Brown, etc.)",
      "type": "reference_data"
    },
    "SSC1A2": {
      "depends_on": [],
      "description": null,
      "type": null
    },
    "WASerror": {
      "depends_on": [],
      "description": null,
      "type": null
    },
    "WSC1A1": {
      "depends_on": [
        "#SSVARS",
        "SSC1A2",
        "WASerror"
      ],
      "description": "SOAP customer add simulation script - generates SOAP envelope and HTTP request for LGACUS01 web service testing using synthetic customer data",
      "type": "web_service_simulation"
    },
    "WSC1I1": {
      "depends_on": [
        "#SSVARS",
        "WASerror"
      ],
      "description": "SOAP customer inquiry simulation script - generates SOAP envelope and HTTP request for LGICUS01 web service testing with random customer number generation",
      "type": "web_service_simulation"
    },
    "WSLGCF": {
      "depends_on": [
        "LGICVS01"
      ],
      "description": "Customer validation web service simulation - fetches valid customer numbers via LGICVS01 service with error handling and response parsing",
      "type": "web_service_simulation"
    }
  }
}
